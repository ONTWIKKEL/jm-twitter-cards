{"version":3,"sources":["webpack:///webpack/bootstrap cd9bc206eaaf741b2481","webpack:///./admin/js/cards/index.js","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"editor\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}","webpack:///./admin/js/cards/components/title/index.js","webpack:///external {\"this\":[\"wp\",\"data\"]}","webpack:///./admin/js/cards/components/image/index.js","webpack:///./admin/js/cards/style.scss"],"names":["registerBlockType","title","__","icon","category","supports","className","html","inserter","reusable","multiple","attributes","twitterCardType","type","source","meta","cardDesc","cardImageID","cardImage","cardImageAlt","cardPlayer","cardPlayerWidth","cardPlayerHeight","cardPlayerStream","cardPlayerCodec","edit","setAttributes","updateCardType","updateCardImageAlt","updateCardDesc","updateCardPlayer","updateCardPlayerWidth","updateCardPlayerHeight","updateCardPlayerStream","updateCardPlayerCodec","theType","tcDataMetabox","defaultType","theImage","getImage","imageWrapperStyles","backgroundImage","avatar","twitterSite","domain","label","value","media","url","id","open","save","GetTitle","props","selectTitle","withSelect","select","getEditedPostAttribute","Title","defaultImage"],"mappings":"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","file":"admin/js/cards/build/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd9bc206eaaf741b2481","/**\n * TODO: TIDY\n */\nimport {registerBlockType} from \"@wordpress/blocks\";\nimport {BlockControls, InspectorControls, MediaUpload, mediaUpload} from \"@wordpress/editor\";\n\nimport {\n    Button,\n    IconButton,\n    PanelBody,\n    Placeholder,\n    RangeControl,\n    SelectControl,\n    TextareaControl,\n    TextControl,\n    ToggleControl\n} from \"@wordpress/components\";\n\nimport {Fragment} from \"@wordpress/element\";\n\nimport {__} from \"@wordpress/i18n\";\n\nimport {Title} from \"./components/title\";\nimport {getImage} from \"./components/image\";\n\nimport \"./style.scss\";\n\nregisterBlockType('jm-tc/cards', {\n    title: __('Twitter Cards', 'jm-tc'),\n    icon: 'twitter',\n    category: 'common',\n    supports: {\n        className: false,\n        html: false,\n        inserter: true,// see https://wordpress.org/gutenberg/handbook/block-api/\n        reusable: false,// see https://wordpress.org/gutenberg/handbook/block-api/\n        multiple: false,// see https://github.com/WordPress/gutenberg/blob/master/packages/block-library/src/more/index.js#L38\n    },\n    attributes: {\n        twitterCardType: {\n            type: 'string',\n            source: 'meta',\n            meta: 'twitterCardType',\n        },\n        cardDesc: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardDesc'\n        },\n        cardImageID: {\n            type: 'integer',\n            source: 'meta',\n            meta: 'cardImageID'\n        },\n        cardImage: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardImage',\n        },\n        cardImageAlt: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardImageAlt'\n        },\n        cardPlayer: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardPlayer'\n        },\n        cardPlayerWidth: {\n            type: 'integer',\n            source: 'meta',\n            meta: 'cardPlayerWidth'\n        },\n        cardPlayerHeight: {\n            type: 'integer',\n            source: 'meta',\n            meta: 'cardPlayerHeight'\n        },\n        cardPlayerStream: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardPlayerStream'\n        },\n        cardPlayerCodec: {\n            type: 'string',\n            source: 'meta',\n            meta: 'cardPlayerCodec'\n        },\n    },\n\n    edit({attributes, setAttributes, className}) {\n\n        const {\n            twitterCardType,\n            cardImageID,\n            cardDesc,\n            cardImage,\n            cardImageAlt,\n            cardPlayer,\n            cardPlayerWidth,\n            cardPlayerHeight,\n            cardPlayerStream,\n            cardPlayerCodec,\n        } = attributes;\n\n        const updateCardType = twitterCardType => setAttributes({twitterCardType});\n        const updateCardImageAlt = cardImageAlt => setAttributes({cardImageAlt});\n        const updateCardDesc = cardDesc => setAttributes({cardDesc});\n        const updateCardPlayer = cardPlayer => setAttributes({cardPlayer});\n        const updateCardPlayerWidth = cardPlayerWidth => setAttributes({cardPlayerWidth});\n        const updateCardPlayerHeight = cardPlayerHeight => setAttributes({cardPlayerHeight});\n        const updateCardPlayerStream = cardPlayerStream => setAttributes({cardPlayerStream});\n        const updateCardPlayerCodec = cardPlayerCodec => setAttributes({cardPlayerCodec});\n\n        let theType = twitterCardType || tcDataMetabox.defaultType;\n\n        let theImage = getImage(cardImage);\n        let imageWrapperStyles = {\n            backgroundImage: 'url(' + theImage + ')',\n        };\n\n        return (\n            <Fragment>\n                <div className=\"EmbeddedTweet\">\n                    <div className=\"EmbeddedTweet-author u-cf\">\n                        <img className=\"EmbeddedTweet-author-avatar\"\n                             src={tcDataMetabox.avatar}/>\n                        <div\n                            className=\"EmbeddedTweet-author-name u-pullLeft\">{__(\"Your Twitter account name\", \"jm-tc\")}</div>\n                        <div className=\"EmbeddedTweet-author-handle u-pullLeft\">@{tcDataMetabox.twitterSite}</div>\n                    </div>\n                    <div className=\"EmbeddedTweet-text\">\n                        {'app' !== theType && (\n                            <p>{__(\"The card for your website will look a little something like this!\", \"jm-tc\")}</p>\n                        )}\n                        {'app' === theType && (\n                            <p>{__('Preview is not provided for application card', 'jm-tc')}</p>\n                        )}\n                    </div>\n\n                    <div className=\"CardPreview u-marginVm\" id=\"CardPreview\">\n                        <div className=\"CardPreview-preview js-cardPreview\">\n                            <div className=\"TwitterCardsGrid TwitterCard TwitterCard--animation\">\n                                {'app' !== theType && (\n                                    <div\n                                        className=\"TwitterCardsGrid-col--12 TwitterCardsGrid-col--spacerBottom CardContent\">\n                                        <div\n                                            className={\"js-openLink u-block TwitterCardsGrid-col--12 TwitterCard-container \" + theType + \"--small \" + theType + \"--noImage\"}>\n                                            <div className={theType + \"-image TwitterCardsGrid-float--prev\"}>\n                                                <div className=\"tcu-imageContainer tcu-imageAspect--1to1\">\n                                                    <div className=\"tcu-imageWrapper\" style={imageWrapperStyles}>\n                                                        <img className=\"u-block\"\n                                                             alt={cardImageAlt || ''}\n                                                             src={theImage}/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div\n                                                className={theType + \"-contentContainer TwitterCardsGrid-float--prev\"}>\n                                                <div className={theType + \"-content TwitterCardsGrid-ltr\"}>\n                                                    <Title/>\n                                                    <p className=\"TwitterCard-desc tcu-resetMargin u-block TwitterCardsGrid-col--spacerTop tcu-textEllipse--multiline\">{cardDesc}\n                                                        <span\n                                                            className=\"SummaryCard-destination\">{tcDataMetabox.domain}</span>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <InspectorControls>\n                    <PanelBody title={__(\"General Settings\", \"jm-tc\")}>\n\n                        <SelectControl\n                            label={__(\"Card Type\", \"jm-tc\")}\n                            value={theType}\n                            options={[\n                                {label: __('Summary', 'jm-tc'), value: 'summary'},\n                                {label: __('Summary Large Image', 'jm-tc'), value: 'summary_large_image'},\n                                {label: __('Player', 'jm-tc'), value: 'player'},\n                                {label: __('Application', 'jm-tc'), value: 'app'},\n                            ]}\n                            onChange={updateCardType}\n                        />\n                        <TextareaControl\n                            label={__(\"Card description\", \"jm-tc\")}\n                            help={__(\"By default this will be automatically generated or retrieved from a SEO plugin such as Yoast or All in One SEO but you can override this here\", \"jm-tc\")}\n                            className={className}\n                            value={cardDesc}\n                            onChange={updateCardDesc}\n                        />\n                    </PanelBody>\n                    {'player' === twitterCardType && (\n                        <PanelBody title={__(\"Player Settings\", \"jm-tc\")}>\n                            <Fragment>\n                                <TextControl\n                                    type=\"url\"\n                                    label={__('Player URL', 'jm-tc')}\n                                    value={cardPlayer}\n                                    placeholder={__('Enter URL…', 'jm-tc')}\n                                    onChange={updateCardPlayer}\n                                />\n                                <RangeControl\n                                    label={__('Player Width', 'jm-tc')}\n                                    value={cardPlayerWidth}\n                                    min={262}\n                                    max={1000}\n                                    onChange={updateCardPlayerWidth}\n                                />\n                                <RangeControl\n                                    label={__('Player Height', 'jm-tc')}\n                                    value={cardPlayerHeight}\n                                    min={196}\n                                    max={1000}\n                                    onChange={updateCardPlayerHeight}\n                                />\n                                <TextControl\n                                    type=\"url\"\n                                    label={__('Player Stream URL', 'jm-tc')}\n                                    value={cardPlayerStream}\n                                    placeholder={__('Enter URL…', 'jm-tc')}\n                                    onChange={updateCardPlayerStream}\n                                />\n                                <TextControl\n                                    type=\"url\"\n                                    label={__('Player codec URL', 'jm-tc')}\n                                    value={cardPlayerCodec}\n                                    placeholder={__('Enter URL…', 'jm-tc')}\n                                    onChange={updateCardPlayerCodec}\n                                />\n                            </Fragment>\n                        </PanelBody>\n                    )}\n\n                    <PanelBody title={__(\"Image Settings\", \"jm-tc\")}>\n                        {!cardImage && (\n                            <Placeholder\n                                instructions={__(\"Using featured image is highly recommanded but you can override this here. Upload image here or insert from media library to set another source for twitter image than featured image\", \"jm-tc\")}\n                                icon=\"format-image\"\n                                label={\"Image\"}\n                            >\n                                <MediaUpload\n                                    onSelect={(media) => setAttributes({cardImage: media.url, cardImageID: media.id})}\n                                    type=\"image\"\n                                    render={({open}) => (\n                                        <Button isLarge onClick={open}>\n                                            {__(\n                                                \"Insert from Media Library\",\n                                                \"jm-tc\"\n                                            )}\n                                        </Button>\n                                    )}\n                                />\n                            </Placeholder>)}\n                        {cardImage && (\n                            <Placeholder\n                                instructions={__(\"Change twitter Image source\", \"jm-tc\")}\n                                icon=\"format-image\"\n                                label={\"Image\"}\n                            >\n                                <div className=\"thumbnail\">\n                                    <div className=\"centered\">\n                                        <MediaUpload\n                                            onSelect={(media) => setAttributes({\n                                                cardImage: media.url,\n                                                cardImageID: media.id\n                                            })}\n                                            type=\"image\"\n                                            value={cardImageID}\n                                            render={({open}) => (\n                                                <img src={cardImage} alt={cardImageAlt || ''}\n                                                     className=\"tc-image-overview\" onClick={open}/>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                            </Placeholder>\n                        )}\n\n                        <TextareaControl\n                            label={__(\"Card image alt text\", \"jm-tc\")}\n                            className={className}\n                            value={cardImageAlt}\n                            onChange={updateCardImageAlt}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n            </Fragment>\n        );\n    },\n\n    save: function () {\n        return null;// we need this to prevent our stuffs from appearing in post content, we want meta here\n    },\n});\n\n\n// WEBPACK FOOTER //\n// ./admin/js/cards/index.js","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"blocks\"]}\n// module id = 1\n// module chunks = 0","(function() { module.exports = this[\"wp\"][\"editor\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"editor\"]}\n// module id = 2\n// module chunks = 0","(function() { module.exports = this[\"wp\"][\"components\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"components\"]}\n// module id = 3\n// module chunks = 0","(function() { module.exports = this[\"wp\"][\"element\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"element\"]}\n// module id = 4\n// module chunks = 0","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"i18n\"]}\n// module id = 5\n// module chunks = 0","import {withSelect} from \"@wordpress/data\";\n\n/**\n * @link https://stackoverflow.com/a/51792096\n * @link https://riad.blog/2018/06/07/efficient-client-data-management-for-wordpress-plugins/\n * @param props\n * @returns {*}\n * @constructor\n */\nconst GetTitle = props => <h2 className=\"TwitterCard-title js-cardClick tcu-textEllipse--multiline\">{props.title}</h2>;\n\nconst selectTitle = withSelect(select => ({\n    title: select(\"core/editor\").getEditedPostAttribute('title')\n}));\n\nexport const Title = selectTitle(GetTitle);\n\n\n// WEBPACK FOOTER //\n// ./admin/js/cards/components/title/index.js","(function() { module.exports = this[\"wp\"][\"data\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"this\":[\"wp\",\"data\"]}\n// module id = 7\n// module chunks = 0","// TODO use withSelect from data gut for featured media\n\nexport function getImage(url) {\n    return url || tcDataMetabox.defaultImage;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./admin/js/cards/components/image/index.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./admin/js/cards/style.scss\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}